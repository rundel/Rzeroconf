// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/Rzeroconf.h"
#include <Rcpp.h>

using namespace Rcpp;

// browse
Rcpp::List browse(std::string const& type, std::string const& domain, unsigned wait);
RcppExport SEXP _Rzeroconf_browse(SEXP typeSEXP, SEXP domainSEXP, SEXP waitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string const& >::type type(typeSEXP);
    Rcpp::traits::input_parameter< std::string const& >::type domain(domainSEXP);
    Rcpp::traits::input_parameter< unsigned >::type wait(waitSEXP);
    rcpp_result_gen = Rcpp::wrap(browse(type, domain, wait));
    return rcpp_result_gen;
END_RCPP
}
// create_browser
Rcpp::XPtr<zc_browser> create_browser(std::string const& type, std::string const& domain);
RcppExport SEXP _Rzeroconf_create_browser(SEXP typeSEXP, SEXP domainSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string const& >::type type(typeSEXP);
    Rcpp::traits::input_parameter< std::string const& >::type domain(domainSEXP);
    rcpp_result_gen = Rcpp::wrap(create_browser(type, domain));
    return rcpp_result_gen;
END_RCPP
}
// get_browser_results
Rcpp::DataFrame get_browser_results(Rcpp::XPtr<zc_browser> b);
RcppExport SEXP _Rzeroconf_get_browser_results(SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<zc_browser> >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(get_browser_results(b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rzeroconf_browse", (DL_FUNC) &_Rzeroconf_browse, 3},
    {"_Rzeroconf_create_browser", (DL_FUNC) &_Rzeroconf_create_browser, 2},
    {"_Rzeroconf_get_browser_results", (DL_FUNC) &_Rzeroconf_get_browser_results, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rzeroconf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
